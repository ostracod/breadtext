
TEST "Left in empty buffer"
PRESS_KEY LEFT
ASSERT_POS 1 0

TEST "Left in empty line"
ADD_LINE "abc"
ADD_LINE ""
ADD_LINE "def"
SET_POS 2 0
PRESS_KEY LEFT
ASSERT_POS 1 3

TEST "Left in middle of line"
ADD_LINE "abc"
ADD_LINE "def"
ADD_LINE "ghi"
SET_POS 2 2
PRESS_KEY LEFT
ASSERT_POS 2 1

TEST "Left at beginning of line"
ADD_LINE "abc"
ADD_LINE "def"
ADD_LINE "ghi"
SET_POS 2 0
PRESS_KEY LEFT
ASSERT_POS 1 3

TEST "Left at end of line"
ADD_LINE "abc"
ADD_LINE "def"
ADD_LINE "ghi"
SET_POS 2 3
PRESS_KEY LEFT
ASSERT_POS 2 2

TEST "Left at beginning of buffer"
ADD_LINE "abc"
ADD_LINE "def"
ADD_LINE "ghi"
SET_POS 1 0
PRESS_KEY LEFT
ASSERT_POS 1 0

TEST "Left at end of buffer"
ADD_LINE "abc"
ADD_LINE "def"
ADD_LINE "ghi"
SET_POS 3 3
PRESS_KEY LEFT
ASSERT_POS 3 2

TEST "Right in empty buffer"
PRESS_KEY RIGHT
ASSERT_POS 1 0

TEST "Right in empty line"
ADD_LINE "abc"
ADD_LINE ""
ADD_LINE "def"
SET_POS 2 0
PRESS_KEY RIGHT
ASSERT_POS 3 0

TEST "Right in middle of line"
ADD_LINE "abc"
ADD_LINE "def"
ADD_LINE "ghi"
SET_POS 2 2
PRESS_KEY RIGHT
ASSERT_POS 2 3

TEST "Right at beginning of line"
ADD_LINE "abc"
ADD_LINE "def"
ADD_LINE "ghi"
SET_POS 2 0
PRESS_KEY RIGHT
ASSERT_POS 2 1

TEST "Right at end of line"
ADD_LINE "abc"
ADD_LINE "def"
ADD_LINE "ghi"
SET_POS 2 3
PRESS_KEY RIGHT
ASSERT_POS 3 0

TEST "Right at beginning of buffer"
ADD_LINE "abc"
ADD_LINE "def"
ADD_LINE "ghi"
SET_POS 1 0
PRESS_KEY RIGHT
ASSERT_POS 1 1

TEST "Right at end of buffer"
ADD_LINE "abc"
ADD_LINE "def"
ADD_LINE "ghi"
SET_POS 3 3
PRESS_KEY RIGHT
ASSERT_POS 3 3

TEST "Up in empty buffer"
PRESS_KEY UP
ASSERT_POS 1 0

TEST "Up in empty line"
ADD_LINE "abc"
ADD_LINE ""
ADD_LINE "def"
SET_POS 2 0
PRESS_KEY UP
ASSERT_POS 1 0

TEST "Up in middle of line"
ADD_LINE "abc"
ADD_LINE "def"
ADD_LINE "ghi"
SET_POS 2 2
PRESS_KEY UP
ASSERT_POS 1 2

TEST "Up at beginning of line"
ADD_LINE "abc"
ADD_LINE "def"
ADD_LINE "ghi"
SET_POS 2 0
PRESS_KEY UP
ASSERT_POS 1 0

TEST "Up at end of line"
ADD_LINE "abc"
ADD_LINE "def"
ADD_LINE "ghi"
SET_POS 2 3
PRESS_KEY UP
ASSERT_POS 1 3

TEST "Up at beginning of buffer"
ADD_LINE "abc"
ADD_LINE "def"
ADD_LINE "ghi"
SET_POS 1 0
PRESS_KEY UP
ASSERT_POS 1 0

TEST "Up at end of buffer"
ADD_LINE "abc"
ADD_LINE "def"
ADD_LINE "ghi"
SET_POS 3 3
PRESS_KEY UP
ASSERT_POS 2 3

TEST "Down in empty buffer"
PRESS_KEY DOWN
ASSERT_POS 1 0

TEST "Down in empty line"
ADD_LINE "abc"
ADD_LINE ""
ADD_LINE "def"
SET_POS 2 0
PRESS_KEY DOWN
ASSERT_POS 3 0

TEST "Down in middle of line"
ADD_LINE "abc"
ADD_LINE "def"
ADD_LINE "ghi"
SET_POS 2 2
PRESS_KEY DOWN
ASSERT_POS 3 2

TEST "Down at beginning of line"
ADD_LINE "abc"
ADD_LINE "def"
ADD_LINE "ghi"
SET_POS 2 0
PRESS_KEY DOWN
ASSERT_POS 3 0

TEST "Down at end of line"
ADD_LINE "abc"
ADD_LINE "def"
ADD_LINE "ghi"
SET_POS 2 3
PRESS_KEY DOWN
ASSERT_POS 3 3

TEST "Down at beginning of buffer"
ADD_LINE "abc"
ADD_LINE "def"
ADD_LINE "ghi"
SET_POS 1 0
PRESS_KEY DOWN
ASSERT_POS 2 0

TEST "Down at end of buffer"
ADD_LINE "abc"
ADD_LINE "def"
ADD_LINE "ghi"
SET_POS 3 3
PRESS_KEY DOWN
ASSERT_POS 3 3

TEST "Column snap"
ADD_LINE "abc"
ADD_LINE ""
ADD_LINE "def"
SET_POS 1 0
PRESS_KEY RIGHT DOWN DOWN DOWN
ASSERT_POS 3 1

TEST "Alternative left"
ADD_LINE "abc"
ADD_LINE "def"
ADD_LINE "ghi"
SET_POS 2 1
PRESS_KEY j
ASSERT_POS 2 0

TEST "Alternative right"
ADD_LINE "abc"
ADD_LINE "def"
ADD_LINE "ghi"
SET_POS 2 1
PRESS_KEY l
ASSERT_POS 2 2

TEST "Alternative up"
ADD_LINE "abc"
ADD_LINE "def"
ADD_LINE "ghi"
SET_POS 2 1
PRESS_KEY i
ASSERT_POS 1 1

TEST "Alternative down"
ADD_LINE "abc"
ADD_LINE "def"
ADD_LINE "ghi"
SET_POS 2 1
PRESS_KEY k
ASSERT_POS 3 1

TEST "Super left"
ADD_LINE "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
SET_POS 1 11
PRESS_KEY J
ASSERT_POS 1 1

TEST "Super right"
ADD_LINE "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
SET_POS 1 11
PRESS_KEY L
ASSERT_POS 1 21

TEST "Super up"
ADD_LINE "a"
ADD_LINE "a"
ADD_LINE "a"
ADD_LINE "a"
ADD_LINE "a"
ADD_LINE "a"
ADD_LINE "a"
ADD_LINE "a"
ADD_LINE "a"
ADD_LINE "a"
ADD_LINE "a"
ADD_LINE "a"
SET_POS 12 0
PRESS_KEY I
ASSERT_POS 2 0

TEST "Super down"
ADD_LINE "a"
ADD_LINE "a"
ADD_LINE "a"
ADD_LINE "a"
ADD_LINE "a"
ADD_LINE "a"
ADD_LINE "a"
ADD_LINE "a"
ADD_LINE "a"
ADD_LINE "a"
ADD_LINE "a"
ADD_LINE "a"
SET_POS 1 0
PRESS_KEY K
ASSERT_POS 11 0

TEST "Mark 1"
ADD_LINE "a"
ADD_LINE "a"
ADD_LINE "a"
ADD_LINE "a"
ADD_LINE "a"
SET_POS 3 0
PRESS_KEY !
SET_POS 1 0
PRESS_KEY 1
ASSERT_POS 3 0

TEST "Mark 2"
ADD_LINE "a"
ADD_LINE "a"
ADD_LINE "a"
ADD_LINE "a"
ADD_LINE "a"
SET_POS 3 0
PRESS_KEY @
SET_POS 1 0
PRESS_KEY 2
ASSERT_POS 3 0

TEST "Mark 3"
ADD_LINE "a"
ADD_LINE "a"
ADD_LINE "a"
ADD_LINE "a"
ADD_LINE "a"
SET_POS 3 0
PRESS_KEY #
SET_POS 1 0
PRESS_KEY 3
ASSERT_POS 3 0

TEST "Mark 4"
ADD_LINE "a"
ADD_LINE "a"
ADD_LINE "a"
ADD_LINE "a"
ADD_LINE "a"
SET_POS 3 0
PRESS_KEY $
SET_POS 1 0
PRESS_KEY 4
ASSERT_POS 3 0

TEST "Mark 5"
ADD_LINE "a"
ADD_LINE "a"
ADD_LINE "a"
ADD_LINE "a"
ADD_LINE "a"
SET_POS 3 0
PRESS_KEY %
SET_POS 1 0
PRESS_KEY 5
ASSERT_POS 3 0

TEST "Mark 6"
ADD_LINE "a"
ADD_LINE "a"
ADD_LINE "a"
ADD_LINE "a"
ADD_LINE "a"
SET_POS 3 0
PRESS_KEY ^
SET_POS 1 0
PRESS_KEY 6
ASSERT_POS 3 0

TEST "Deleted mark"
ADD_LINE "a"
ADD_LINE "a"
ADD_LINE "a"
ADD_LINE "a"
ADD_LINE "a"
SET_POS 2 0
PRESS_KEY ! H d
SET_POS 4 0
PRESS_KEY 1
ASSERT_POS 2 1

TEST "Mark position in line"
ADD_LINE "abcdef"
ADD_LINE "ghijkl"
ADD_LINE "mnopqr"
SET_POS 2 4
PRESS_KEY !
SET_POS 1 0
PRESS_KEY 1
ASSERT_POS 2 4

TEST "Go to beginning of line"
ADD_LINE "abc"
ADD_LINE "def"
ADD_LINE "ghi"
SET_POS 2 1
PRESS_KEY [
ASSERT_POS 2 0

TEST "Go to beginning of empty line"
ADD_LINE "abc"
ADD_LINE ""
ADD_LINE "ghi"
SET_POS 2 0
PRESS_KEY [
ASSERT_POS 2 0

TEST "Go to end of line"
ADD_LINE "abc"
ADD_LINE "def"
ADD_LINE "ghi"
SET_POS 2 1
PRESS_KEY ]
ASSERT_POS 2 3

TEST "Go to end of empty line"
ADD_LINE "abc"
ADD_LINE ""
ADD_LINE "ghi"
SET_POS 2 0
PRESS_KEY ]
ASSERT_POS 2 0

TEST "Go to beginning of buffer"
ADD_LINE "abc"
ADD_LINE "def"
ADD_LINE "ghi"
SET_POS 2 1
PRESS_KEY {
ASSERT_POS 1 0

TEST "Go to beginning of empty buffer"
ADD_LINE ""
SET_POS 1 0
PRESS_KEY {
ASSERT_POS 1 0

TEST "Go to end of buffer"
ADD_LINE "abc"
ADD_LINE "def"
ADD_LINE "ghi"
SET_POS 2 1
PRESS_KEY }
ASSERT_POS 3 0

TEST "Go to end of empty buffer"
ADD_LINE ""
SET_POS 1 0
PRESS_KEY }
ASSERT_POS 1 0

TEST "Go to beginning of indentation"
ADD_LINE "abc"
ADD_LINE "    def"
ADD_LINE "ghi"
SET_POS 2 5
PRESS_KEY =
ASSERT_POS 2 4

TEST "Go to beginning of indentation without indentation"
ADD_LINE "abc"
ADD_LINE "def"
ADD_LINE "ghi"
SET_POS 2 1
PRESS_KEY =
ASSERT_POS 2 0

TEST "Go to beginning of indentation in empty line"
ADD_LINE "abc"
ADD_LINE ""
ADD_LINE "ghi"
SET_POS 2 0
PRESS_KEY =
ASSERT_POS 2 0

TEST "Go to character exclusive same line"
ADD_LINE "abc"
ADD_LINE "def"
ADD_LINE "ghi"
SET_POS 2 0
PRESS_KEY g f
ASSERT_POS 2 1

TEST "Go to character exclusive different line"
ADD_LINE "abc"
ADD_LINE "def"
ADD_LINE "ghi"
SET_POS 2 0
PRESS_KEY g h
ASSERT_POS 3 0

TEST "Go to character exclusive missing"
ADD_LINE "abc"
ADD_LINE "def"
ADD_LINE "ghi"
SET_POS 2 0
PRESS_KEY g x
ASSERT_POS 2 0

TEST "Go to character inclusive same line"
ADD_LINE "abc"
ADD_LINE "def"
ADD_LINE "ghi"
SET_POS 2 0
PRESS_KEY G f
ASSERT_POS 2 2

TEST "Go to character inclusive different line"
ADD_LINE "abc"
ADD_LINE "def"
ADD_LINE "ghi"
SET_POS 2 0
PRESS_KEY G h
ASSERT_POS 3 1

TEST "Go to character inclusive missing"
ADD_LINE "abc"
ADD_LINE "def"
ADD_LINE "ghi"
SET_POS 2 0
PRESS_KEY G x
ASSERT_POS 2 0

TEST "Reverse go to character exclusive same line"
ADD_LINE "abc"
ADD_LINE "def"
ADD_LINE "ghi"
SET_POS 2 2
PRESS_KEY r d
ASSERT_POS 2 1

TEST "Reverse go to character exclusive different line"
ADD_LINE "abc"
ADD_LINE "def"
ADD_LINE "ghi"
SET_POS 2 2
PRESS_KEY r b
ASSERT_POS 1 2

TEST "Reverse go to character exclusive missing"
ADD_LINE "abc"
ADD_LINE "def"
ADD_LINE "ghi"
SET_POS 2 2
PRESS_KEY r x
ASSERT_POS 2 2

TEST "Reverse go to character inclusive same line"
ADD_LINE "abc"
ADD_LINE "def"
ADD_LINE "ghi"
SET_POS 2 2
PRESS_KEY R d
ASSERT_POS 2 0

TEST "Reverse go to character inclusive different line"
ADD_LINE "abc"
ADD_LINE "def"
ADD_LINE "ghi"
SET_POS 2 2
PRESS_KEY R b
ASSERT_POS 1 1

TEST "Reverse go to character inclusive missing"
ADD_LINE "abc"
ADD_LINE "def"
ADD_LINE "ghi"
SET_POS 2 2
PRESS_KEY R x
ASSERT_POS 2 2

TEST "Find on same line"
ADD_LINE "abcdef"
ADD_LINE "ghijkl"
ADD_LINE "mnopqr"
ADD_LINE "abcdef"
ADD_LINE "ghijkl"
ADD_LINE "mnopqr"
SET_POS 2 0
TEXT_COMMAND "find jk"
ASSERT_POS 2 3

TEST "Find on different line"
ADD_LINE "abcdef"
ADD_LINE "ghijkl"
ADD_LINE "mnopqr"
ADD_LINE "abcdef"
ADD_LINE "ghijkl"
ADD_LINE "mnopqr"
SET_POS 2 0
TEXT_COMMAND "find op"
ASSERT_POS 3 2

TEST "Find at start of line"
ADD_LINE "abcdef"
ADD_LINE "ghijkl"
ADD_LINE "mnopqr"
ADD_LINE "abcdef"
ADD_LINE "ghijkl"
ADD_LINE "mnopqr"
SET_POS 2 0
TEXT_COMMAND "find mn"
ASSERT_POS 3 0

TEST "Find at end of line"
ADD_LINE "abcdef"
ADD_LINE "ghijkl"
ADD_LINE "mnopqr"
ADD_LINE "abcdef"
ADD_LINE "ghijkl"
ADD_LINE "mnopqr"
SET_POS 2 0
TEXT_COMMAND "find qr"
ASSERT_POS 3 4

TEST "Find with loop"
ADD_LINE "abcdef"
ADD_LINE "ghijkl"
ADD_LINE "mnopqr"
ADD_LINE "abcdef"
ADD_LINE "ghijkl"
ADD_LINE "mnopqr"
SET_POS 6 0
TEXT_COMMAND "find cd"
ASSERT_POS 1 2

TEST "Find missing"
ADD_LINE "abcdef"
ADD_LINE "ghijkl"
ADD_LINE "mnopqr"
ADD_LINE "abcdef"
ADD_LINE "ghijkl"
ADD_LINE "mnopqr"
SET_POS 6 0
TEXT_COMMAND "find xx"
ASSERT_POS 6 0

TEST "Reverse find on same line"
ADD_LINE "abcdef"
ADD_LINE "ghijkl"
ADD_LINE "mnopqr"
ADD_LINE "abcdef"
ADD_LINE "ghijkl"
ADD_LINE "mnopqr"
SET_POS 2 5
TEXT_COMMAND "reverseFind hi"
ASSERT_POS 2 1

TEST "Reverse find on different line"
ADD_LINE "abcdef"
ADD_LINE "ghijkl"
ADD_LINE "mnopqr"
ADD_LINE "abcdef"
ADD_LINE "ghijkl"
ADD_LINE "mnopqr"
SET_POS 1 5
TEXT_COMMAND "reverseFind cd"
ASSERT_POS 1 2

TEST "Reverse find at start of line"
ADD_LINE "abcdef"
ADD_LINE "ghijkl"
ADD_LINE "mnopqr"
ADD_LINE "abcdef"
ADD_LINE "ghijkl"
ADD_LINE "mnopqr"
SET_POS 1 5
TEXT_COMMAND "reverseFind ab"
ASSERT_POS 1 0

TEST "Reverse find at end of line"
ADD_LINE "abcdef"
ADD_LINE "ghijkl"
ADD_LINE "mnopqr"
ADD_LINE "abcdef"
ADD_LINE "ghijkl"
ADD_LINE "mnopqr"
SET_POS 1 5
TEXT_COMMAND "reverseFind ef"
ASSERT_POS 1 4

TEST "Reverse find with loop"
ADD_LINE "abcdef"
ADD_LINE "ghijkl"
ADD_LINE "mnopqr"
ADD_LINE "abcdef"
ADD_LINE "ghijkl"
ADD_LINE "mnopqr"
SET_POS 2 5
TEXT_COMMAND "reverseFind op"
ASSERT_POS 6 2

TEST "Reverse find missing"
ADD_LINE "abcdef"
ADD_LINE "ghijkl"
ADD_LINE "mnopqr"
ADD_LINE "abcdef"
ADD_LINE "ghijkl"
ADD_LINE "mnopqr"
SET_POS 2 5
TEXT_COMMAND "reverseFind xx"
ASSERT_POS 2 5

TEST "Find next instance"
ADD_LINE "abcdef"
ADD_LINE "ghijkl"
ADD_LINE "mnopqr"
ADD_LINE "abcdef"
ADD_LINE "ghijkl"
ADD_LINE "mnopqr"
SET_POS 2 0
TEXT_COMMAND "find jk"
SET_POS 2 0
PRESS_KEY n
ASSERT_POS 2 3

TEST "Find previous instance"
ADD_LINE "abcdef"
ADD_LINE "ghijkl"
ADD_LINE "mnopqr"
ADD_LINE "abcdef"
ADD_LINE "ghijkl"
ADD_LINE "mnopqr"
SET_POS 2 0
TEXT_COMMAND "find jk"
SET_POS 2 0
PRESS_KEY N
ASSERT_POS 5 3

TEST "Find word on same line"
ADD_LINE "ba ab ca"
ADD_LINE "aa ab aa abc a ab aa"
ADD_LINE "ba ab ca"
SET_POS 2 5
TEXT_COMMAND "findWord ab"
ASSERT_POS 2 15

TEST "Find word on different line"
ADD_LINE "ba ab ca"
ADD_LINE "aa ab aa abc a ab aa"
ADD_LINE "ba ab ca"
SET_POS 2 17
TEXT_COMMAND "findWord ab"
ASSERT_POS 3 3

TEST "Find word at start of line"
ADD_LINE "ba ab ca"
ADD_LINE "aa ab aa abc a ab aa"
ADD_LINE "ba ab ca"
SET_POS 2 17
TEXT_COMMAND "findWord ba"
ASSERT_POS 3 0

TEST "Find word at end of line"
ADD_LINE "ba ab ca"
ADD_LINE "aa ab aa abc a ab aa"
ADD_LINE "ba ab ca"
SET_POS 2 17
TEXT_COMMAND "findWord ca"
ASSERT_POS 3 6

TEST "Find word with loop"
ADD_LINE "ba ab ca"
ADD_LINE "aa ab aa abc a ab aa"
ADD_LINE "ba ab ca"
SET_POS 3 6
TEXT_COMMAND "findWord ab"
ASSERT_POS 1 3

TEST "Find word missing"
ADD_LINE "ba ab ca"
ADD_LINE "aa ab aa abc a ab aa"
ADD_LINE "ba ab ca"
SET_POS 2 17
TEXT_COMMAND "findWord xx"
ASSERT_POS 2 17

TEST "Reverse find word on same line"
ADD_LINE "ba ab ca"
ADD_LINE "aa ab aa abc a ab aa"
ADD_LINE "ba ab ca"
SET_POS 2 14
TEXT_COMMAND "reverseFindWord ab"
ASSERT_POS 2 3

TEST "Reverse find word on different line"
ADD_LINE "ba ab ca"
ADD_LINE "aa ab aa abc a ab aa"
ADD_LINE "ba ab ca"
SET_POS 2 0
TEXT_COMMAND "reverseFindWord ab"
ASSERT_POS 1 3

TEST "Reverse find word at start of line"
ADD_LINE "ba ab ca"
ADD_LINE "aa ab aa abc a ab aa"
ADD_LINE "ba ab ca"
SET_POS 2 0
TEXT_COMMAND "reverseFindWord ba"
ASSERT_POS 1 0

TEST "Reverse find word at end of line"
ADD_LINE "ba ab ca"
ADD_LINE "aa ab aa abc a ab aa"
ADD_LINE "ba ab ca"
SET_POS 2 0
TEXT_COMMAND "reverseFindWord ca"
ASSERT_POS 1 6

TEST "Reverse find word with loop"
ADD_LINE "ba ab ca"
ADD_LINE "aa ab aa abc a ab aa"
ADD_LINE "ba ab ca"
SET_POS 1 0
TEXT_COMMAND "reverseFindWord ab"
ASSERT_POS 3 3

TEST "Reverse find word missing"
ADD_LINE "ba ab ca"
ADD_LINE "aa ab aa abc a ab aa"
ADD_LINE "ba ab ca"
SET_POS 2 0
TEXT_COMMAND "reverseFindWord xx"
ASSERT_POS 2 0

TEST "Find next instance of word"
ADD_LINE "ba ab ca"
ADD_LINE "aa ab aa abc a ab aa"
ADD_LINE "ba ab ca"
SET_POS 2 3
PRESS_KEY f
ASSERT_POS 2 15

TEST "Find next instance of word at start of line"
ADD_LINE "ba ab ba"
ADD_LINE "aa ab aa abc a ab aa"
ADD_LINE "ba ab ba"
SET_POS 1 0
PRESS_KEY f
ASSERT_POS 1 6

TEST "Find next instance of word at end of line"
ADD_LINE "ba ab ba"
ADD_LINE "aa ab aa abc a ab aa"
ADD_LINE "ba ab ba"
SET_POS 1 6
PRESS_KEY f
ASSERT_POS 3 0

TEST "Find previous instance of word"
ADD_LINE "ba ab ca"
ADD_LINE "aa ab aa abc a ab aa"
ADD_LINE "ba ab ca"
SET_POS 2 15
PRESS_KEY F
ASSERT_POS 2 3

TEST "Find previous instance of word at start of line"
ADD_LINE "ba ab ba"
ADD_LINE "aa ab aa abc a ab aa"
ADD_LINE "ba ab ba"
SET_POS 3 0
PRESS_KEY F
ASSERT_POS 1 6

TEST "Find previous instance of word at end of line"
ADD_LINE "ba ab ba"
ADD_LINE "aa ab aa abc a ab aa"
ADD_LINE "ba ab ba"
SET_POS 3 6
PRESS_KEY F
ASSERT_POS 3 0

TEST "Jump to matching parenthesis"
ADD_LINE "((((("
ADD_LINE ")))))"
SET_POS 1 1
PRESS_KEY 8
ASSERT_POS 2 3
PRESS_KEY 8
ASSERT_POS 1 1

TEST "Jump to matching parenthesis with string"
ADD_LINE "((((("
ADD_LINE "aa\"a)a\\\"a)a\"aa'a)a\"aa)a'aa"
ADD_LINE ")))))"
SET_POS 1 1
PRESS_KEY 8
ASSERT_POS 3 3
PRESS_KEY 8
ASSERT_POS 1 1

TEST "Jump to matching parenthesis missing"
ADD_LINE "(((((((((("
ADD_LINE ")))))"
SET_POS 1 1
PRESS_KEY 8
ASSERT_POS 1 1

TEST "Jump to matching quotation mark"
ADD_LINE "aaa\"aaaa\"aaaa\"aaa'aaa'aaa\\\"aaa\"aaa\"aaa\""
SET_POS 1 13
PRESS_KEY 8
ASSERT_POS 1 30
PRESS_KEY 8
ASSERT_POS 1 13


