
TEST "Enter text entry mode"
PRESS_KEY ` t a
ASSERT_LINE_COUNT 1
ASSERT_LINE 1 "a"
ASSERT_POS 1 1

TEST "Exit text entry mode"
PRESS_KEY t a ESC `
ASSERT_LINE_COUNT 1
ASSERT_LINE 1 "a"
ASSERT_POS 1 1

TEST "Comma escape 1"
PRESS_KEY t a , , `
ASSERT_LINE_COUNT 1
ASSERT_LINE 1 "a"
ASSERT_POS 1 1

TEST "Comma escape 2"
PRESS_KEY t , , `
ASSERT_LINE_COUNT 1
ASSERT_LINE 1 ""
ASSERT_POS 1 0

TEST "No comma escape 1"
PRESS_KEY t a , a , a
ASSERT_LINE_COUNT 1
ASSERT_LINE 1 "a,a,a"
ASSERT_POS 1 5

TEST "No comma escape 2"
ADD_LINE ""
ADD_LINE ""
PRESS_KEY t a , DOWN , a
ASSERT_LINE_COUNT 2
ASSERT_LINE 1 "a,"
ASSERT_LINE 2 ",a"
ASSERT_POS 2 2

TEST "Type characters in empty buffer"
PRESS_KEY t a b c
ASSERT_LINE_COUNT 1
ASSERT_LINE 1 "abc"
ASSERT_POS 1 3

TEST "Type characters in empty line"
ADD_LINE "abc"
ADD_LINE ""
ADD_LINE "def"
SET_POS 2 0
PRESS_KEY t g h i
ASSERT_LINE_COUNT 3
ASSERT_LINE 1 "abc"
ASSERT_LINE 2 "ghi"
ASSERT_LINE 3 "def"
ASSERT_POS 2 3

TEST "Type characters in middle of line"
ADD_LINE "abc"
ADD_LINE "def"
ADD_LINE "ghi"
SET_POS 2 2
PRESS_KEY t j k l
ASSERT_LINE_COUNT 3
ASSERT_LINE 1 "abc"
ASSERT_LINE 2 "dejklf"
ASSERT_LINE 3 "ghi"
ASSERT_POS 2 5

TEST "Type characters at beginning of line"
ADD_LINE "abc"
ADD_LINE "def"
ADD_LINE "ghi"
SET_POS 2 0
PRESS_KEY t j k l
ASSERT_LINE_COUNT 3
ASSERT_LINE 1 "abc"
ASSERT_LINE 2 "jkldef"
ASSERT_LINE 3 "ghi"
ASSERT_POS 2 3

TEST "Type characters at end of line"
ADD_LINE "abc"
ADD_LINE "def"
ADD_LINE "ghi"
SET_POS 2 3
PRESS_KEY t j k l
ASSERT_LINE_COUNT 3
ASSERT_LINE 1 "abc"
ASSERT_LINE 2 "defjkl"
ASSERT_LINE 3 "ghi"
ASSERT_POS 2 6

TEST "Type characters at beginning of buffer"
ADD_LINE "abc"
ADD_LINE "def"
ADD_LINE "ghi"
SET_POS 1 0
PRESS_KEY t j k l
ASSERT_LINE_COUNT 3
ASSERT_LINE 1 "jklabc"
ASSERT_LINE 2 "def"
ASSERT_LINE 3 "ghi"
ASSERT_POS 1 3

TEST "Type characters at end of buffer"
ADD_LINE "abc"
ADD_LINE "def"
ADD_LINE "ghi"
SET_POS 3 3
PRESS_KEY t j k l
ASSERT_LINE_COUNT 3
ASSERT_LINE 1 "abc"
ASSERT_LINE 2 "def"
ASSERT_LINE 3 "ghijkl"
ASSERT_POS 3 6

TEST "Space"
PRESS_KEY SPACE
ASSERT_LINE_COUNT 1
ASSERT_LINE 1 " "
ASSERT_POS 1 1

TEST "Enter text replace mode"
ADD_LINE "def"
PRESS_KEY ` T a
ASSERT_LINE_COUNT 1
ASSERT_LINE 1 "aef"
ASSERT_POS 1 1

TEST "Exit text replace mode"
ADD_LINE "def"
PRESS_KEY T a ESC `
ASSERT_LINE_COUNT 1
ASSERT_LINE 1 "aef"
ASSERT_POS 1 1

TEST "Comma replace escape 1"
ADD_LINE "def"
PRESS_KEY T a , , `
ASSERT_LINE_COUNT 1
ASSERT_LINE 1 "aef"
ASSERT_POS 1 1

TEST "Comma replace escape 2"
ADD_LINE "def"
PRESS_KEY T , , `
ASSERT_LINE_COUNT 1
ASSERT_LINE 1 "def"
ASSERT_POS 1 0

TEST "No comma replace escape 1"
ADD_LINE "defghi"
PRESS_KEY T a , a , a
ASSERT_LINE_COUNT 1
ASSERT_LINE 1 "a,a,ai"
ASSERT_POS 1 5

TEST "No comma replace escape 2"
ADD_LINE "defghi"
ADD_LINE "jklmno"
PRESS_KEY T a , DOWN , a
ASSERT_LINE_COUNT 2
ASSERT_LINE 1 "a,fghi"
ASSERT_LINE 2 "jk,ano"
ASSERT_POS 2 4

TEST "Replace characters in empty buffer"
PRESS_KEY T a b
ASSERT_LINE_COUNT 1
ASSERT_LINE 1 "ab"
ASSERT_POS 1 2

TEST "Replace characters in empty line"
ADD_LINE "abc"
ADD_LINE ""
ADD_LINE "def"
SET_POS 2 0
PRESS_KEY T g h
ASSERT_LINE_COUNT 2
ASSERT_LINE 1 "abc"
ASSERT_LINE 2 "ghef"
ASSERT_POS 2 2

TEST "Replace characters in middle of line"
ADD_LINE "abc"
ADD_LINE "def"
ADD_LINE "ghi"
SET_POS 2 1
PRESS_KEY T j k
ASSERT_LINE_COUNT 3
ASSERT_LINE 1 "abc"
ASSERT_LINE 2 "djk"
ASSERT_LINE 3 "ghi"
ASSERT_POS 2 3

TEST "Replace characters at beginning of line"
ADD_LINE "abc"
ADD_LINE "def"
ADD_LINE "ghi"
SET_POS 2 0
PRESS_KEY T j k
ASSERT_LINE_COUNT 3
ASSERT_LINE 1 "abc"
ASSERT_LINE 2 "jkf"
ASSERT_LINE 3 "ghi"
ASSERT_POS 2 2

TEST "Replace characters at end of line"
ADD_LINE "abc"
ADD_LINE "def"
ADD_LINE "ghi"
SET_POS 2 3
PRESS_KEY T j k
ASSERT_LINE_COUNT 2
ASSERT_LINE 1 "abc"
ASSERT_LINE 2 "defjkhi"
ASSERT_POS 2 5

TEST "Replace characters at beginning of buffer"
ADD_LINE "abc"
ADD_LINE "def"
ADD_LINE "ghi"
SET_POS 1 0
PRESS_KEY T j k
ASSERT_LINE_COUNT 3
ASSERT_LINE 1 "jkc"
ASSERT_LINE 2 "def"
ASSERT_LINE 3 "ghi"
ASSERT_POS 1 2

TEST "Replace characters at end of buffer"
ADD_LINE "abc"
ADD_LINE "def"
ADD_LINE "ghi"
SET_POS 3 3
PRESS_KEY T j k
ASSERT_LINE_COUNT 3
ASSERT_LINE 1 "abc"
ASSERT_LINE 2 "def"
ASSERT_LINE 3 "ghijk"
ASSERT_POS 3 5

TEST "Backspace in empty buffer"
PRESS_KEY BACKSPACE
ASSERT_LINE_COUNT 1
ASSERT_LINE 1 ""
ASSERT_POS 1 0

TEST "Backspace in empty line"
ADD_LINE "abc"
ADD_LINE ""
ADD_LINE "def"
SET_POS 2 0
PRESS_KEY BACKSPACE
ASSERT_LINE_COUNT 2
ASSERT_LINE 1 "abc"
ASSERT_LINE 2 "def"
ASSERT_POS 1 3

TEST "Backspace in middle of line"
ADD_LINE "abc"
ADD_LINE "def"
ADD_LINE "ghi"
SET_POS 2 2
PRESS_KEY BACKSPACE
ASSERT_LINE_COUNT 3
ASSERT_LINE 1 "abc"
ASSERT_LINE 2 "df"
ASSERT_LINE 3 "ghi"
ASSERT_POS 2 1

TEST "Backspace at beginning of line"
ADD_LINE "abc"
ADD_LINE "def"
ADD_LINE "ghi"
SET_POS 2 0
PRESS_KEY BACKSPACE
ASSERT_LINE_COUNT 2
ASSERT_LINE 1 "abcdef"
ASSERT_LINE 2 "ghi"
ASSERT_POS 1 3

TEST "Backspace at end of line"
ADD_LINE "abc"
ADD_LINE "def"
ADD_LINE "ghi"
SET_POS 2 3
PRESS_KEY BACKSPACE
ASSERT_LINE_COUNT 3
ASSERT_LINE 1 "abc"
ASSERT_LINE 2 "de"
ASSERT_LINE 3 "ghi"
ASSERT_POS 2 2

TEST "Backspace at beginning of buffer"
ADD_LINE "abc"
ADD_LINE "def"
ADD_LINE "ghi"
SET_POS 1 0
PRESS_KEY BACKSPACE
ASSERT_LINE_COUNT 3
ASSERT_LINE 1 "abc"
ASSERT_LINE 2 "def"
ASSERT_LINE 3 "ghi"
ASSERT_POS 1 0

TEST "Backspace at end of buffer"
ADD_LINE "abc"
ADD_LINE "def"
ADD_LINE "ghi"
SET_POS 3 3
PRESS_KEY BACKSPACE
ASSERT_LINE_COUNT 3
ASSERT_LINE 1 "abc"
ASSERT_LINE 2 "def"
ASSERT_LINE 3 "gh"
ASSERT_POS 3 2

TEST "Delete in empty buffer"
PRESS_KEY d
ASSERT_LINE_COUNT 1
ASSERT_LINE 1 ""
ASSERT_POS 1 0

TEST "Delete in empty line"
ADD_LINE "abc"
ADD_LINE ""
ADD_LINE "def"
SET_POS 2 0
PRESS_KEY d
ASSERT_LINE_COUNT 2
ASSERT_LINE 1 "abc"
ASSERT_LINE 2 "def"
ASSERT_POS 2 0

TEST "Delete in middle of line"
ADD_LINE "abc"
ADD_LINE "def"
ADD_LINE "ghi"
SET_POS 2 1
PRESS_KEY d
ASSERT_LINE_COUNT 3
ASSERT_LINE 1 "abc"
ASSERT_LINE 2 "df"
ASSERT_LINE 3 "ghi"
ASSERT_POS 2 1

TEST "Delete at beginning of line"
ADD_LINE "abc"
ADD_LINE "def"
ADD_LINE "ghi"
SET_POS 2 0
PRESS_KEY d
ASSERT_LINE_COUNT 3
ASSERT_LINE 1 "abc"
ASSERT_LINE 2 "ef"
ASSERT_LINE 3 "ghi"
ASSERT_POS 2 0

TEST "Delete at end of line"
ADD_LINE "abc"
ADD_LINE "def"
ADD_LINE "ghi"
SET_POS 2 3
PRESS_KEY d
ASSERT_LINE_COUNT 2
ASSERT_LINE 1 "abc"
ASSERT_LINE 2 "defghi"
ASSERT_POS 2 3

TEST "Delete at beginning of buffer"
ADD_LINE "abc"
ADD_LINE "def"
ADD_LINE "ghi"
SET_POS 1 0
PRESS_KEY d
ASSERT_LINE_COUNT 3
ASSERT_LINE 1 "bc"
ASSERT_LINE 2 "def"
ASSERT_LINE 3 "ghi"
ASSERT_POS 1 0

TEST "Delete at end of buffer"
ADD_LINE "abc"
ADD_LINE "def"
ADD_LINE "ghi"
SET_POS 3 3
PRESS_KEY d
ASSERT_LINE_COUNT 3
ASSERT_LINE 1 "abc"
ASSERT_LINE 2 "def"
ASSERT_LINE 3 "ghi"
ASSERT_POS 3 3

TEST "Change"
ADD_LINE "abc"
ADD_LINE "def"
ADD_LINE "ghi"
SET_POS 2 1
PRESS_KEY D x
ASSERT_LINE_COUNT 3
ASSERT_LINE 1 "abc"
ASSERT_LINE 2 "dxf"
ASSERT_LINE 3 "ghi"
ASSERT_POS 2 2

TEST "Newline in empty buffer"
PRESS_KEY NEWLINE
ASSERT_LINE_COUNT 2
ASSERT_LINE 1 ""
ASSERT_LINE 2 ""
ASSERT_POS 2 0

TEST "Newline in empty line"
ADD_LINE "abc"
ADD_LINE ""
ADD_LINE "def"
SET_POS 2 0
PRESS_KEY NEWLINE
ASSERT_LINE_COUNT 4
ASSERT_LINE 1 "abc"
ASSERT_LINE 2 ""
ASSERT_LINE 3 ""
ASSERT_LINE 4 "def"
ASSERT_POS 3 0

TEST "Newline in middle of line"
ADD_LINE "abc"
ADD_LINE "def"
ADD_LINE "ghi"
SET_POS 2 2
PRESS_KEY NEWLINE
ASSERT_LINE_COUNT 4
ASSERT_LINE 1 "abc"
ASSERT_LINE 2 "de"
ASSERT_LINE 3 "f"
ASSERT_LINE 4 "ghi"
ASSERT_POS 3 0

TEST "Newline at beginning of line"
ADD_LINE "abc"
ADD_LINE "def"
ADD_LINE "ghi"
SET_POS 2 0
PRESS_KEY NEWLINE
ASSERT_LINE_COUNT 4
ASSERT_LINE 1 "abc"
ASSERT_LINE 2 ""
ASSERT_LINE 3 "def"
ASSERT_LINE 4 "ghi"
ASSERT_POS 3 0

TEST "Newline at end of line"
ADD_LINE "abc"
ADD_LINE "def"
ADD_LINE "ghi"
SET_POS 2 3
PRESS_KEY NEWLINE
ASSERT_LINE_COUNT 4
ASSERT_LINE 1 "abc"
ASSERT_LINE 2 "def"
ASSERT_LINE 3 ""
ASSERT_LINE 4 "ghi"
ASSERT_POS 3 0

TEST "Newline at beginning of buffer"
ADD_LINE "abc"
ADD_LINE "def"
ADD_LINE "ghi"
SET_POS 1 0
PRESS_KEY NEWLINE
ASSERT_LINE_COUNT 4
ASSERT_LINE 1 ""
ASSERT_LINE 2 "abc"
ASSERT_LINE 3 "def"
ASSERT_LINE 4 "ghi"
ASSERT_POS 2 0

TEST "Newline at end of buffer"
ADD_LINE "abc"
ADD_LINE "def"
ADD_LINE "ghi"
SET_POS 3 3
PRESS_KEY NEWLINE
ASSERT_LINE_COUNT 4
ASSERT_LINE 1 "abc"
ASSERT_LINE 2 "def"
ASSERT_LINE 3 "ghi"
ASSERT_LINE 4 ""
ASSERT_POS 4 0

TEST "Newline with indentation in middle of line"
ADD_LINE "abc"
ADD_LINE "    def"
ADD_LINE "ghi"
SET_POS 2 6
PRESS_KEY NEWLINE
ASSERT_LINE_COUNT 4
ASSERT_LINE 1 "abc"
ASSERT_LINE 2 "    de"
ASSERT_LINE 3 "    f"
ASSERT_LINE 4 "ghi"
ASSERT_POS 3 4

TEST "Replace in empty line"
ADD_LINE "abc"
ADD_LINE ""
ADD_LINE "def"
SET_POS 2 0
PRESS_KEY . x
ASSERT_LINE_COUNT 2
ASSERT_LINE 1 "abc"
ASSERT_LINE 2 "xdef"
ASSERT_POS 2 0

TEST "Replace in middle of line"
ADD_LINE "abc"
ADD_LINE "def"
ADD_LINE "ghi"
SET_POS 2 1
PRESS_KEY . x
ASSERT_LINE_COUNT 3
ASSERT_LINE 1 "abc"
ASSERT_LINE 2 "dxf"
ASSERT_LINE 3 "ghi"
ASSERT_POS 2 1

TEST "Replace at beginning of line"
ADD_LINE "abc"
ADD_LINE "def"
ADD_LINE "ghi"
SET_POS 2 0
PRESS_KEY . x
ASSERT_LINE_COUNT 3
ASSERT_LINE 1 "abc"
ASSERT_LINE 2 "xef"
ASSERT_LINE 3 "ghi"
ASSERT_POS 2 0

TEST "Replace at end of line"
ADD_LINE "abc"
ADD_LINE "def"
ADD_LINE "ghi"
SET_POS 2 3
PRESS_KEY . x
ASSERT_LINE_COUNT 2
ASSERT_LINE 1 "abc"
ASSERT_LINE 2 "defxghi"
ASSERT_POS 2 3

TEST "Replace at beginning of buffer"
ADD_LINE "abc"
ADD_LINE "def"
ADD_LINE "ghi"
SET_POS 1 0
PRESS_KEY . x
ASSERT_LINE_COUNT 3
ASSERT_LINE 1 "xbc"
ASSERT_LINE 2 "def"
ASSERT_LINE 3 "ghi"
ASSERT_POS 1 0

TEST "Insert character after cursor in empty line"
ADD_LINE "abc"
ADD_LINE ""
ADD_LINE "def"
SET_POS 2 0
PRESS_KEY ' x
ASSERT_LINE_COUNT 3
ASSERT_LINE 1 "abc"
ASSERT_LINE 2 ""
ASSERT_LINE 3 "xdef"
ASSERT_POS 2 0

TEST "Insert character after cursor in middle of line"
ADD_LINE "abc"
ADD_LINE "def"
ADD_LINE "ghi"
SET_POS 2 1
PRESS_KEY ' x
ASSERT_LINE_COUNT 3
ASSERT_LINE 1 "abc"
ASSERT_LINE 2 "dexf"
ASSERT_LINE 3 "ghi"
ASSERT_POS 2 1

TEST "Insert character after cursor at beginning of line"
ADD_LINE "abc"
ADD_LINE "def"
ADD_LINE "ghi"
SET_POS 2 0
PRESS_KEY ' x
ASSERT_LINE_COUNT 3
ASSERT_LINE 1 "abc"
ASSERT_LINE 2 "dxef"
ASSERT_LINE 3 "ghi"
ASSERT_POS 2 0

TEST "Insert character after cursor at end of line"
ADD_LINE "abc"
ADD_LINE "def"
ADD_LINE "ghi"
SET_POS 2 3
PRESS_KEY ' x
ASSERT_LINE_COUNT 3
ASSERT_LINE 1 "abc"
ASSERT_LINE 2 "def"
ASSERT_LINE 3 "xghi"
ASSERT_POS 2 3

TEST "Insert character after cursor at beginning of buffer"
ADD_LINE "abc"
ADD_LINE "def"
ADD_LINE "ghi"
SET_POS 1 0
PRESS_KEY ' x
ASSERT_LINE_COUNT 3
ASSERT_LINE 1 "axbc"
ASSERT_LINE 2 "def"
ASSERT_LINE 3 "ghi"
ASSERT_POS 1 0

TEST "Insert character before cursor in empty line"
ADD_LINE "abc"
ADD_LINE ""
ADD_LINE "def"
SET_POS 2 0
PRESS_KEY "\"" x
ASSERT_LINE_COUNT 3
ASSERT_LINE 1 "abc"
ASSERT_LINE 2 "x"
ASSERT_LINE 3 "def"
ASSERT_POS 2 1

TEST "Insert character before cursor in middle of line"
ADD_LINE "abc"
ADD_LINE "def"
ADD_LINE "ghi"
SET_POS 2 2
PRESS_KEY "\"" x
ASSERT_LINE_COUNT 3
ASSERT_LINE 1 "abc"
ASSERT_LINE 2 "dexf"
ASSERT_LINE 3 "ghi"
ASSERT_POS 2 3

TEST "Insert character before cursor at beginning of line"
ADD_LINE "abc"
ADD_LINE "def"
ADD_LINE "ghi"
SET_POS 2 0
PRESS_KEY "\"" x
ASSERT_LINE_COUNT 3
ASSERT_LINE 1 "abc"
ASSERT_LINE 2 "xdef"
ASSERT_LINE 3 "ghi"
ASSERT_POS 2 1

TEST "Insert character before cursor at end of line"
ADD_LINE "abc"
ADD_LINE "def"
ADD_LINE "ghi"
SET_POS 2 3
PRESS_KEY "\"" x
ASSERT_LINE_COUNT 3
ASSERT_LINE 1 "abc"
ASSERT_LINE 2 "defx"
ASSERT_LINE 3 "ghi"
ASSERT_POS 2 4

TEST "Insert character before cursor at beginning of buffer"
ADD_LINE "abc"
ADD_LINE "def"
ADD_LINE "ghi"
SET_POS 1 0
PRESS_KEY "\"" x
ASSERT_LINE_COUNT 3
ASSERT_LINE 1 "xabc"
ASSERT_LINE 2 "def"
ASSERT_LINE 3 "ghi"
ASSERT_POS 1 1

TEST "Insert character before cursor at end of buffer"
ADD_LINE "abc"
ADD_LINE "def"
ADD_LINE "ghi"
SET_POS 3 3
PRESS_KEY "\"" x
ASSERT_LINE_COUNT 3
ASSERT_LINE 1 "abc"
ASSERT_LINE 2 "def"
ASSERT_LINE 3 "ghix"
ASSERT_POS 3 4

TEST "Insert line after cursor in empty buffer"
PRESS_KEY "\\"
ASSERT_LINE_COUNT 2
ASSERT_LINE 1 ""
ASSERT_LINE 2 ""
ASSERT_POS 1 0

TEST "Insert line after cursor in middle of buffer"
ADD_LINE "abc"
ADD_LINE "def"
ADD_LINE "ghi"
SET_POS 2 1
PRESS_KEY "\\"
ASSERT_LINE_COUNT 4
ASSERT_LINE 1 "abc"
ASSERT_LINE 2 "def"
ASSERT_LINE 3 ""
ASSERT_LINE 4 "ghi"
ASSERT_POS 2 1

TEST "Insert line after cursor at beginning of buffer"
ADD_LINE "abc"
ADD_LINE "def"
ADD_LINE "ghi"
SET_POS 1 1
PRESS_KEY "\\"
ASSERT_LINE_COUNT 4
ASSERT_LINE 1 "abc"
ASSERT_LINE 2 ""
ASSERT_LINE 3 "def"
ASSERT_LINE 4 "ghi"
ASSERT_POS 1 1

TEST "Insert line after cursor at end of buffer"
ADD_LINE "abc"
ADD_LINE "def"
ADD_LINE "ghi"
SET_POS 3 1
PRESS_KEY "\\"
ASSERT_LINE_COUNT 4
ASSERT_LINE 1 "abc"
ASSERT_LINE 2 "def"
ASSERT_LINE 3 "ghi"
ASSERT_LINE 4 ""
ASSERT_POS 3 1

TEST "Insert line after cursor with indentation in middle of buffer"
ADD_LINE "abc"
ADD_LINE "    def"
ADD_LINE "ghi"
SET_POS 2 1
PRESS_KEY "\\"
ASSERT_LINE_COUNT 4
ASSERT_LINE 1 "abc"
ASSERT_LINE 2 "    def"
ASSERT_LINE 3 "    "
ASSERT_LINE 4 "ghi"
ASSERT_POS 2 1

TEST "Insert line before cursor in empty buffer"
PRESS_KEY |
ASSERT_LINE_COUNT 2
ASSERT_LINE 1 ""
ASSERT_LINE 2 ""
ASSERT_POS 2 0

TEST "Insert line before cursor in middle of buffer"
ADD_LINE "abc"
ADD_LINE "def"
ADD_LINE "ghi"
SET_POS 2 1
PRESS_KEY |
ASSERT_LINE_COUNT 4
ASSERT_LINE 1 "abc"
ASSERT_LINE 2 ""
ASSERT_LINE 3 "def"
ASSERT_LINE 4 "ghi"
ASSERT_POS 3 1

TEST "Insert line before cursor at beginning of buffer"
ADD_LINE "abc"
ADD_LINE "def"
ADD_LINE "ghi"
SET_POS 1 1
PRESS_KEY |
ASSERT_LINE_COUNT 4
ASSERT_LINE 1 ""
ASSERT_LINE 2 "abc"
ASSERT_LINE 3 "def"
ASSERT_LINE 4 "ghi"
ASSERT_POS 2 1

TEST "Insert line before cursor at end of buffer"
ADD_LINE "abc"
ADD_LINE "def"
ADD_LINE "ghi"
SET_POS 3 1
PRESS_KEY |
ASSERT_LINE_COUNT 4
ASSERT_LINE 1 "abc"
ASSERT_LINE 2 "def"
ASSERT_LINE 3 ""
ASSERT_LINE 4 "ghi"
ASSERT_POS 4 1

TEST "Insert line before cursor with indentation in middle of buffer"
ADD_LINE "abc"
ADD_LINE "    def"
ADD_LINE "ghi"
SET_POS 2 1
PRESS_KEY |
ASSERT_LINE_COUNT 4
ASSERT_LINE 1 "abc"
ASSERT_LINE 2 "    "
ASSERT_LINE 3 "    def"
ASSERT_LINE 4 "ghi"
ASSERT_POS 3 1

TEST "Insert and edit line after cursor in empty buffer"
PRESS_KEY o x
ASSERT_LINE_COUNT 2
ASSERT_LINE 1 ""
ASSERT_LINE 2 "x"
ASSERT_POS 2 1

TEST "Insert and edit line after cursor in middle of buffer"
ADD_LINE "abc"
ADD_LINE "def"
ADD_LINE "ghi"
SET_POS 2 1
PRESS_KEY o x
ASSERT_LINE_COUNT 4
ASSERT_LINE 1 "abc"
ASSERT_LINE 2 "def"
ASSERT_LINE 3 "x"
ASSERT_LINE 4 "ghi"
ASSERT_POS 3 1

TEST "Insert and edit line after cursor at beginning of buffer"
ADD_LINE "abc"
ADD_LINE "def"
ADD_LINE "ghi"
SET_POS 1 1
PRESS_KEY o x
ASSERT_LINE_COUNT 4
ASSERT_LINE 1 "abc"
ASSERT_LINE 2 "x"
ASSERT_LINE 3 "def"
ASSERT_LINE 4 "ghi"
ASSERT_POS 2 1

TEST "Insert and edit line after cursor at end of buffer"
ADD_LINE "abc"
ADD_LINE "def"
ADD_LINE "ghi"
SET_POS 3 1
PRESS_KEY o x
ASSERT_LINE_COUNT 4
ASSERT_LINE 1 "abc"
ASSERT_LINE 2 "def"
ASSERT_LINE 3 "ghi"
ASSERT_LINE 4 "x"
ASSERT_POS 4 1

TEST "Insert and edit line after cursor with indentation in middle of buffer"
ADD_LINE "abc"
ADD_LINE "    def"
ADD_LINE "ghi"
SET_POS 2 1
PRESS_KEY o x
ASSERT_LINE_COUNT 4
ASSERT_LINE 1 "abc"
ASSERT_LINE 2 "    def"
ASSERT_LINE 3 "    x"
ASSERT_LINE 4 "ghi"
ASSERT_POS 3 5

TEST "Insert and edit line before cursor in empty buffer"
PRESS_KEY O x
ASSERT_LINE_COUNT 2
ASSERT_LINE 1 "x"
ASSERT_LINE 2 ""
ASSERT_POS 1 1

TEST "Insert and edit line before cursor in middle of buffer"
ADD_LINE "abc"
ADD_LINE "def"
ADD_LINE "ghi"
SET_POS 2 1
PRESS_KEY O x
ASSERT_LINE_COUNT 4
ASSERT_LINE 1 "abc"
ASSERT_LINE 2 "x"
ASSERT_LINE 3 "def"
ASSERT_LINE 4 "ghi"
ASSERT_POS 2 1

TEST "Insert and edit line before cursor at beginning of buffer"
ADD_LINE "abc"
ADD_LINE "def"
ADD_LINE "ghi"
SET_POS 1 1
PRESS_KEY O x
ASSERT_LINE_COUNT 4
ASSERT_LINE 1 "x"
ASSERT_LINE 2 "abc"
ASSERT_LINE 3 "def"
ASSERT_LINE 4 "ghi"
ASSERT_POS 1 1

TEST "Insert and edit line before cursor at end of buffer"
ADD_LINE "abc"
ADD_LINE "def"
ADD_LINE "ghi"
SET_POS 3 1
PRESS_KEY O x
ASSERT_LINE_COUNT 4
ASSERT_LINE 1 "abc"
ASSERT_LINE 2 "def"
ASSERT_LINE 3 "x"
ASSERT_LINE 4 "ghi"
ASSERT_POS 3 1

TEST "Insert and edit line before cursor with indentation in middle of buffer"
ADD_LINE "abc"
ADD_LINE "    def"
ADD_LINE "ghi"
SET_POS 2 1
PRESS_KEY O x
ASSERT_LINE_COUNT 4
ASSERT_LINE 1 "abc"
ASSERT_LINE 2 "    x"
ASSERT_LINE 3 "    def"
ASSERT_LINE 4 "ghi"
ASSERT_POS 2 5

TEST "Change line in empty buffer"
PRESS_KEY C x
ASSERT_LINE_COUNT 1
ASSERT_LINE 1 "x"
ASSERT_POS 1 1

TEST "Change line in middle of buffer"
ADD_LINE "abc"
ADD_LINE "def"
ADD_LINE "ghi"
SET_POS 2 1
PRESS_KEY C x
ASSERT_LINE_COUNT 3
ASSERT_LINE 1 "abc"
ASSERT_LINE 2 "x"
ASSERT_LINE 3 "ghi"
ASSERT_POS 2 1

TEST "Change line at beginning of buffer"
ADD_LINE "abc"
ADD_LINE "def"
ADD_LINE "ghi"
SET_POS 1 1
PRESS_KEY C x
ASSERT_LINE_COUNT 3
ASSERT_LINE 1 "x"
ASSERT_LINE 2 "def"
ASSERT_LINE 3 "ghi"
ASSERT_POS 1 1

TEST "Change line at end of buffer"
ADD_LINE "abc"
ADD_LINE "def"
ADD_LINE "ghi"
SET_POS 3 1
PRESS_KEY C x
ASSERT_LINE_COUNT 3
ASSERT_LINE 1 "abc"
ASSERT_LINE 2 "def"
ASSERT_LINE 3 "x"
ASSERT_POS 3 1

TEST "Change line with indentation in middle of buffer"
ADD_LINE "abc"
ADD_LINE "    def"
ADD_LINE "ghi"
SET_POS 2 1
PRESS_KEY C x
ASSERT_LINE_COUNT 3
ASSERT_LINE 1 "abc"
ASSERT_LINE 2 "    x"
ASSERT_LINE 3 "ghi"
ASSERT_POS 2 5

TEST "Join previous line"
ADD_LINE "abc"
ADD_LINE "def"
ADD_LINE "ghi"
SET_POS 2 1
PRESS_KEY &
ASSERT_LINE_COUNT 2
ASSERT_LINE 1 "abcdef"
ASSERT_LINE 2 "ghi"
ASSERT_POS 1 3

TEST "Join next line"
ADD_LINE "abc"
ADD_LINE "def"
ADD_LINE "ghi"
SET_POS 2 1
PRESS_KEY 7
ASSERT_LINE_COUNT 2
ASSERT_LINE 1 "abc"
ASSERT_LINE 2 "defghi"
ASSERT_POS 2 3

TEST "Join previous line indented"
ADD_LINE "    abc"
ADD_LINE "        def"
ADD_LINE "            ghi"
SET_POS 2 1
PRESS_KEY &
ASSERT_LINE_COUNT 2
ASSERT_LINE 1 "    abcdef"
ASSERT_LINE 2 "            ghi"
ASSERT_POS 1 7

TEST "Join next line indented"
ADD_LINE "    abc"
ADD_LINE "        def"
ADD_LINE "            ghi"
SET_POS 2 1
PRESS_KEY 7
ASSERT_LINE_COUNT 2
ASSERT_LINE 1 "    abc"
ASSERT_LINE 2 "        defghi"
ASSERT_POS 2 11


TEST "Join previous line start of buffer"
ADD_LINE "    abc"
ADD_LINE "        def"
ADD_LINE "            ghi"
SET_POS 1 1
PRESS_KEY &
ASSERT_LINE_COUNT 3
ASSERT_LINE 1 "    abc"
ASSERT_LINE 2 "        def"
ASSERT_LINE 3 "            ghi"
ASSERT_POS 1 1

TEST "Join next line end of buffer"
ADD_LINE "    abc"
ADD_LINE "        def"
ADD_LINE "            ghi"
SET_POS 3 1
PRESS_KEY 7
ASSERT_LINE_COUNT 3
ASSERT_LINE 1 "    abc"
ASSERT_LINE 2 "        def"
ASSERT_LINE 3 "            ghi"
ASSERT_POS 3 1


